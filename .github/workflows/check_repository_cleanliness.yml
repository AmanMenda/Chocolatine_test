name: CD

on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'

env:
  MIRROR_URL: https://github.com/EpitechPromo2026/B-DOP-200-COT-2-1-chocolatine-aman.menda.git
  EXECUTABLES: "pushswap"

jobs:
  check_repository_cleanliness:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Unwanted file detected
        run: |
          FILES=$(find . -type f \( -wholename "*#*" -o -name "*~" -o -wholename "#**" \
                -o -iname "*pain_au_chocolat*" -o -name "*.o" -o -name "*.a" \
                -o -name "*.so" -o -name "*.gcno" -o -name "*.gcov" \
                -o -name "*.gcda" -o -type d -path "tmp/**" -o -type \
                f -path "tmp/*.c*" \))
          if [ -z "$FILES" ]; then
            exit 0
          fi

          if [ ! -z "$FILES" ]; then
            for file in $FILES; do 
              echo "::error ::Unwanted file detected:$file#L1"; 
            done
            exit 1
          fi
          done
          
  check_program_compilation:
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    needs: [check_repository_cleanliness]
    steps:
        - uses: actions/checkout@v3
        - name: launches make at the root of the repository
          run: make
          timeout-minutes: 2

        - uses: actions/checkout@v3
        - name: launches make clean
          run: make clean
        
        - uses: actions/checkout@v3
        - name: verifies that each file specified in the EXECUTABLES environment variable exists and is executable
          run: |
            FILES=$(find . -name "${{ env.EXECUTABLES }}")
            if [[ ! -z $FILES && -x $FILES ]]; then
              exit 0
            else
              exit 1
            fi
            done
            
  run_tests:
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    needs: [check_repository_cleanliness, check_program_compilation]
    steps:
        - uses: actions/checkout@v3
        - name: launches make at the root of the repository
          run: make tests_run
          timeout-minutes: 2
  
  push_to_mirror:
    runs-on: ubuntu-latest
    needs: [check_repository_cleanliness, check_program_compilation, run_tests]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            git@github.com:AmanMenda/EPITECH_JAM.git
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}
